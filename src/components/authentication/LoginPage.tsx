/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/yEJE8mDzbIa
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

import SiteLogo from "@/components/SiteLogo.tsx";
import StarBackground from "@/components/StarBackground.tsx";
import {Form, Link, useActionData, useNavigation} from "react-router-dom";
import {Button} from "@assets/components/shadcnui/button.tsx";
import {CircleAlert} from "lucide-react";

/** Add fonts into your Next.js project:

import { Libre_Franklin } from 'next/font/google'
import { Rubik } from 'next/font/google'

libre_franklin({
  subsets: ['latin'],
  display: 'swap',
})

rubik({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
// import { Card, CardContent } from "@assets/components/shadcnui/card"
// import { Label } from "@assets/components/shadcnui/label"
// import { Input } from "@assets/components/shadcnui/input"
// import { Button } from "@assets/components/shadcnui/button"
// import StarBackground from "@/components/StarBackground.tsx";

export default function LoginPage() {
  const navigation = useNavigation();
  const isLoggingIn = navigation.state === 'submitting';
  const actionData = useActionData() as { error: string } | undefined;

  return (
      <>
        <StarBackground />
        <div className="w-screen h-screen items-center flex flex-1 flex-col justify-center px-6 py-12 lg:px-8 z-50">
          <div className="sm:mx-auto sm:w-full sm:max-w-sm z-10">
            <SiteLogo className="mx-auto h-3 w-auto flex justify-center items-center" />
            <h2 className="mt-10 text-center text-2xl font-bold leading-9 tracking-tight bg-black text-gray-300">
              Sign in to your account
            </h2>
          </div>

          <div className="mt-5 sm:mx-auto sm:w-full sm:max-w-sm z-10 bg-black">
            {actionData && 'error' in actionData ? (
                <div className="min-h-[50px] mb-3 bg-red-800 rounded-md p-2 flex flex-row items-center">
                  <CircleAlert size="30" min="30" className="mr-3 min-w-[25px]"/>
                  <p>
                    {actionData.error}
                  </p>
                </div>
            ) : null}
            <Form method="POST" className="space-y-6">
              <div>
                <label className="block text-sm font-medium leading-6 text-gray-300">
                  Username
                </label>
                <div className="mt-2">
                  <input
                      id="username"
                      name="username"
                      placeholder=""
                      type="text"
                      required
                      className="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text sm:leading-6 p-2 text-l"
                  />
                </div>
              </div>

              <div>
                <div className="flex items-center justify-between">
                  <label htmlFor="password" className="block text-sm font-medium leading-6 text-gray-300">
                    Password
                  </label>
                  {/*<div className="text-sm">*/}
                  {/*  <a href="#" className="font-semibold text-indigo-600 hover:text-indigo-500">*/}
                  {/*    Forgot password?*/}
                  {/*  </a>*/}
                  {/*</div>*/}
                </div>
                <div className="mt-2">
                  <input
                      id="password"
                      name="password"
                      type="password"
                      required
                      autoComplete="current-password"
                      className="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:leading-6 p-2 text-l"
                  />
                </div>
              </div>

              <div>
                <Button
                    type="submit"
                    disabled={isLoggingIn}
                    className="flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
                >
                  {isLoggingIn ? 'Signing in' : 'Sign in'}
                </Button>
              </div>
            </Form>

            <p className="mt-10 text-center text-sm text-gray-500 z-10">
              Dont have an account?{' '}
              <Link
                  to={"/register"}
                  className="font-semibold leading-6 text-indigo-600 hover:text-indigo-500"
              >
                Register
              </Link>
            </p>
          </div>
        </div>
      </>
  )
}
// <>
//   <StarBackground/>
//   <div className="flex h-screen w-full items-center justify-center">
//     <div className="w-full max-w-md space-y-6 bg-green-500">
//       <div className="space-y-2 text-center">
//         <h1 className="text-3xl font-bold">Welcome back</h1>
//         <p className="text-muted-foreground">Please insert your login credentials</p>
//       </div>
//       <Card>
//         <CardContent className="space-y-4">
//           <div className="space-y-2">
//             <Label htmlFor="email">E-Mail</Label>
//             <Input id="email" type="email" placeholder="your email" required/>
//           </div>
//           <div className="space-y-2">
//             <div className="flex items-center justify-between">
//               <Label htmlFor="password">Password</Label>
//               {/*<Link href="#" className="text-sm underline" prefetch={false}>*/}
//               {/*  Passwort vergessen?*/}
//               {/*</Link>*/}
//             </div>
//             <Input id="password" type="password" placeholder="your password" required/>
//           </div>
//           <Button className="w-full" type="submit">
//             Anmelden
//           </Button>
//         </CardContent>
//       </Card>
//       {/*<Alert variant="destructive">*/}
//       {/*  <div />*/}
//       {/*  <AlertTitle>Oops, something went wrong!</AlertTitle>*/}
//       {/*  <AlertDescription>Please check your login details and try again</AlertDescription>*/}
//       {/*</Alert>*/}
//     </div>
//   </div>
// </>